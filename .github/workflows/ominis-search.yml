name: Ominis Search

on:
  workflow_dispatch:
    inputs:
      query:
        description: 'Search query/username'
        required: true
      language:
        description: 'Language code (e.g., lang_en)'
        required: false
        default: 'lang_en'
      country:
        description: 'Country code (e.g., US)'
        required: false
        default: 'US'
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: false
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: false
      include_username_search:
        description: 'Perform username search'
        required: true
        type: boolean
        default: true
      include_titles:
        description: 'Include titles in username search results'
        required: false
        type: boolean
        default: true
      include_descriptions:
        description: 'Include descriptions in username search results'
        required: false
        type: boolean
        default: true
      include_html:
        description: 'Include HTML content in username search results'
        required: false
        type: boolean
        default: false
      enable_proxy_rotation:
        description: 'Enable proxy rotation for searches'
        required: false
        type: boolean
        default: true

jobs:
  ominis-search:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Results directory
        run: mkdir -p Results

      - name: Setup environment
        run: |
          mkdir -p src/logs
          touch src/gfetcherror.log
          touch src/username_search.log

      - name: Create automated input script
        run: |
          cat > auto_input.py << 'EOL'
          import sys
          import os

          def simulate_input(prompt):
              if "proxy rotation display" in prompt.lower():
                  return "y" if os.environ.get("ENABLE_PROXY") == "true" else "n"
              if "Include titles" in prompt:
                  return "y" if os.environ.get("INCLUDE_TITLES") == "true" else "n"
              if "Include descriptions" in prompt:
                  return "y" if os.environ.get("INCLUDE_DESCRIPTIONS") == "true" else "n"
              if "Include HTML content" in prompt:
                  return "y" if os.environ.get("INCLUDE_HTML") == "true" else "n"
              if "run a username search" in prompt.lower():
                  return "y" if os.environ.get("DO_USERNAME_SEARCH") == "true" else "n"
              return ""

          import builtins
          builtins.input = simulate_input
          EOL

      - name: Run web search
        env:
          ENABLE_PROXY: ${{ github.event.inputs.enable_proxy_rotation }}
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -c "
          import auto_input
          import asyncio
          from src.tools_handler import fetch_google_results
          from src.proxy_handler import scrape_proxies, validate_proxies

          async def run_search():
              proxies = await scrape_proxies() if '${{ github.event.inputs.enable_proxy_rotation }}' == 'true' else None
              valid_proxies = await validate_proxies(proxies) if proxies else None
              
              await fetch_google_results(
                  query='${{ github.event.inputs.query }}',
                  language='${{ github.event.inputs.language }}',
                  country='${{ github.event.inputs.country }}',
                  date_range=('${{ github.event.inputs.start_date }}', '${{ github.event.inputs.end_date }}'),
                  proxies=valid_proxies
              )

          asyncio.run(run_search())
          "

      - name: Run username search
        if: ${{ github.event.inputs.include_username_search == 'true' }}
        env:
          INCLUDE_TITLES: ${{ github.event.inputs.include_titles }}
          INCLUDE_DESCRIPTIONS: ${{ github.event.inputs.include_descriptions }}
          INCLUDE_HTML: ${{ github.event.inputs.include_html }}
          DO_USERNAME_SEARCH: "true"
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -c "
          import auto_input
          from src.usr import main
          main('${{ github.event.inputs.query }}')
          "

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: ominis-search-results
          path: |
            Results/*.txt
            src/*.log
          if-no-files-found: warn
